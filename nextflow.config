nextflow.enable.dsl = 2

profiles {
  // Default: local with Docker if available
  standard {
    includeConfig 'conf/base.config'
    process {
      executor = 'local'
    }
  }

  docker {
    includeConfig 'conf/base.config'
    docker {
      enabled = true
    }
    process {
      container = 'broadinstitute/gatk:4.5.0.0'
    }
  }

  singularity {
    includeConfig 'conf/base.config'
    singularity {
      enabled = true
      autoMounts = true
    }
    process {
      container = 'docker://broadinstitute/gatk:4.5.0.0'
    }
  }

  conda {
    includeConfig 'conf/base.config'
    conda {
      enabled = true
    }
    process {
      conda = "bioconda::gatk4=4.5.0.0 bioconda::htslib=1.20"
    }
  }

  test {
    includeConfig 'conf/test.config'
  }
}


// nextflow.config (top-level; keep your existing profiles/params)
manifest {
  name            = 'nf-gatk-somatic-cnv'        // required
  mainScript      = 'main.nf'                     // good practice
  description     = 'GATK somatic CNV pipeline using nf-core modules'
  version         = '0.1.0'
  author          = 'Pete Ulintz'
  homePage        = 'https://github.com/umich-jtari-bioinformatics/nf-gatk-somatic-cnv.git'
  nextflowVersion = '!>=24.04.0'                  // recent Nextflow for nf-core tools
}




params {
  // Inputs
  samplesheet         = null
  intervals           = null        // BED or .interval_list or GATK TSV bins
  mode                = 'wgs'       // 'wgs' or 'wes'
  bin_length          = 10000       // used if intervals not provided and mode=wgs
  padding             = 50          // used if mode=wes and capture BED provided
  reference_fasta     = null        // .fa
  common_snps_vcf     = null        // .vcf.gz (tabix-indexed) optional
  autosomes_only      = false

  // PON
  build_pon_only      = false

  // Runtime / resources defaults
  max_cpus            = 8
  max_memory          = '32.GB'
  max_time            = '24.h'

  outdir              = 'results'
  publish_dir_mode    = 'copy'
}
